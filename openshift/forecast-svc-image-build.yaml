apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: forecast-svc-image-build
  namespace: egis
  annotations:
    description: Defines how to build the application image
  labels:
    app: forecast-svc
spec:
  runPolicy: Serial
  source:
    dockerfile: |-
      FROM graalvm:latest
      VOLUME /tmp
      ARG JAR_FILE
      WORKDIR /usr/local/
      COPY forecast-svc-1.0-SNAPSHOT.jar ./forecast-svc.jar
      COPY forecast-svc-1.0-SNAPSHOT-runner.jar ./forecast-svc-runner.jar
      COPY lib ./lib
      ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/usr/local/forecast-svc-runner.jar"]
      EXPOSE 8080
    images:
    - from: 
        kind: ImageStreamTag
        namespace: egis
        name: forecast-svc-artifact:latest
      paths: 
      - sourcePath: /tmp/src/target/forecast-svc-1.0-SNAPSHOT.jar
        destinationDir: "."
      - sourcePath: /tmp/src/target/forecast-svc-1.0-SNAPSHOT-runner.jar
        destinationDir: "."
      - sourcePath: /tmp/src/target/lib
        destinationDir: "."
  strategy:
    dockerStrategy:
      from: 
        kind: ImageStreamTag
        name: graalvm:latest
        namespace: openshift
  output:
    to:
      kind: ImageStreamTag
      name: forecast-svc:latest
  postCommit:
    script: ''
  successfulBuildsHistoryLimit: '3'
  failedBuildsHistoryLimit: '3'
  triggers:
  - imageChange: {}
    type: ImageChange