
quarkus.http.port=8080

## HTTP Client
com.ionep.weather.http.ForecastService/mp-rest/url=http://localhost:8082


## Requests topic
mp.messaging.outgoing.requests.type=io.smallrye.reactive.messaging.kafka.Kafka
mp.messaging.outgoing.requests.topic=requests
mp.messaging.outgoing.requests.bootstrap.servers=kafka-weather-kafka-brokers:9092
mp.messaging.outgoing.requests.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.requests.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.requests.acks=1

## Forecasts / queue topic
mp.messaging.incoming.forecasts.type=io.smallrye.reactive.messaging.kafka.Kafka
mp.messaging.incoming.forecasts.topic=queue
mp.messaging.incoming.forecasts.bootstrap.servers=kafka-weather-kafka-brokers:9092
mp.messaging.incoming.forecasts.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.forecasts.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

## Queue topic - write
mp.messaging.outgoing.queue.type=io.smallrye.reactive.messaging.kafka.Kafka
mp.messaging.outgoing.queue.topic=queue
mp.messaging.outgoing.queue.bootstrap.servers=kafka-weather-kafka-brokers:9092
mp.messaging.outgoing.queue.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.queue.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.queue.acks=1
